## Vue

### 组件设计

* 指责单一

* 组件引用
  - 耦合
    - 高维护
    - 不稳定

引用|依赖 更可靠
* SDP 依赖稳定
 * 尽可能不修改被依赖相代码，所以更稳定
 * 抽象组件更稳定
* SAP 抽象
* LoC 好莱坞原则
 * 父子依赖
* CoC 约定大雨配置

组件库
 * 减少引用，减少组件的维护成本

禁区
* 越界操作
* 副作用
* 侵入性
* 环形依赖
* 属性繁多
 * 过多的属性是否意味着，要拆成多个组件

* 设计规范先行
 * 统一视觉
 * 统一交互

* 要是分离
 * 主题样式
 * 样式差异化
  - 特殊定义需求，抽离css可以让开发者更容易定制（bootstrap）

* 辅助工具/工具
 * 文档
 * 脚手架
 * 事例
 * 迭代

 * 组件管理
  * 业务组件管理
   - npm仓库（切换rep麻烦）
  * 包管理工具
    - lerna
     * 管理Git
     * 依赖直接提交到自己的git地址
     * 配置，一键操作，自动更新依赖项版本，无需手动install更新版本号

    - 无法发布业务组件到npm

* 通用组件库必须要有自动化测试
 * Karma
 * Mocha
 * chai
 * sino 
 * istanbul

* Jest 更好一站式测试方案
 * Mock快照

* 构建
 * 输出的模块规范
  * umd
  * commonjs2
  * es
   - 使用者可以使用 es 的入口，自己打包 Tree-shaking
* Rollup
 - 组件库更好的选择
 - 内置 输出的组类型 （）

* 文档自动化方案
 - docsify

* 组件翻译方案
 — crowdin
  * 逐句翻译
  * 翻译推荐
  * 进度管理
  * 审核机制


